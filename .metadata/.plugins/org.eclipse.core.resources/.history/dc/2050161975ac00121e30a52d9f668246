#include <iostream>
#include <fstream>
#include <cmath>
#include "nr3.h"
#include "gaussj.h"

using namespace std;

int m=2;
int n=2;

int resisteanceMatrix()
{

  double current[n][1];
  double resistance[m][n];


  //initialize currents matrix;
  for(int i=0; i<n; i++)
  {
   	 current[i][0] = 0;
  }

  //initialize resistance matrix;
  for(int i=0; i<m; i++)
  {
	 for(int j=0; j<n; j++)
	 {
	  resistance[i][j] = 0;
	 }
  }












  return 0;
}


int gaussJordan()
{

  MatDoub_IO R(m,n);
  MatDoub_IO v(m,1);

  //Define LHS
  //first row
  R[0][0]=1;
  R[0][1]=0;
  R[0][2]=4;

  //second row
  R[1][0]=0;
  R[1][1]=2;
  R[1][2]=4;

  //third row
  R[2][0]=1;
  R[2][1]=1;
  R[2][2]=-1;

  //Define RHS
  v[0][0]=1;
  v[1][0]=2;
  v[2][0]=0;

  //perform Gauss-Jordan
  gaussj(R,v);

  cout << "Solution is: \n";
  for (int i=0;i<3;i++)
  {
    cout << i << ":\t" << v[i][0]<<endl;
  }

  cout<<"Finished"<<endl;

  return 0;
}

int main()
{
	gaussJordan();
	return 0;
}
